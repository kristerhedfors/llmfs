check README.md so you understand what this is.

Testing Cache Control Functionality:

Important Notes:
- The cache control file is named 'cache_enabled' (not 'cache_enable')
- Proc-like files (.llmfs/cache_enabled, .llmfs/cache_stats) may need to be read twice to see changes
- Always verify cache state through both cache_enabled and cache_stats files

Process:
0) Kill any running llmfs processes:
   ```bash
   ps aux | grep "[p]ython.*llmfs" | awk '{print $2}' | xargs -r kill
   ```

1) Mount fresh filesystem with clean logs:
   ```bash
   fusermount -u qwe && rm -rf qwe && mkdir qwe && \
   truncate -s0 /var/log/llmfs/llmfs.log && \
   llmfs_mount qwe -g "Celebration of Windows Vista"
   ```

2) Set up test files:
   ```bash
   echo "gpt-4o" > qwe/.model && \
   echo "Write a nostalgic ode to Windows Vista's User Account Control popups" > qwe/.prompt && \
   touch qwe/test.txt
   ```

3) Test cache disabling:
   ```bash
   # Disable cache
   echo 0 > qwe/.llmfs/cache_enabled
   # Verify cache state (read twice)
   cat qwe/.llmfs/cache_stats && cat qwe/.llmfs/cache_stats
   # Test with new file
   touch qwe/test2.txt
   ```

4) Test cache enabling:
   ```bash
   # Enable cache
   echo 1 > qwe/.llmfs/cache_enabled
   # Verify cache state (read twice)
   cat qwe/.llmfs/cache_stats && cat qwe/.llmfs/cache_stats
   ```

5) Monitor behavior through logs:
   ```bash
   cat /var/log/llmfs/llmfs.log
   ```

Additional Info:
- Use .llmfs/cache_list to see cached content (may need double read)
- Check logs for "Cache hit/miss" entries to verify behavior
- Cache state changes should be reflected in both cache_enabled and cache_stats
